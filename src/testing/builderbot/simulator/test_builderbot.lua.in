assert(loadfile("@CMAKE_INSTALL_PREFIX@/share/argos3/plugins/robots/builderbot/lua_library.luac"))()

function init()  
   robot.logger:register_module("controller")
   robot.logger:set_verbosity(2) 
   -- enable the robot's camera system  
   robot.camera_system.enable()
   reset()
end

function reset()
   rules = require("test_sample_rules")
   data = {
      target = {},
      blocks = {},
      obstacles = {},
   }
   behavior = robot.utils.behavior_tree.create {
      type = "sequence*",
      children = {
         function()
            robot.logger:log_info("behavior tree started")
            return false, true
         end,
         robot.nodes.create_pick_up_behavior_node(data, rules),
         function() 
            robot.nfc.write("4")
            return false, true
         end,
         robot.nodes.create_place_behavior_node(data, rules),
         function ()
            robot.logger:log_info("behavior tree ended")
            return false, true
         end,
      }
   }
end

local function custom_block_type(block)
   if block.tags.up ~= nil and block.tags.up.type == 1 and 
      block.tags.front ~= nil and block.tags.front.type == 2 then
      return 5
   end
end

function step()
   -- preprocessing
   robot.api.process_blocks(data.blocks)
   robot.api.process_leds(data.blocks, custom_block_type)
   robot.api.process_obstacles(data.obstacles, data.blocks)
   -- tick behavior tree
   behavior()
   -- debug
   --robot.utils.draw.arrow("green", vector3(0,0,0), vector3(1,0,0.05))
   --robot.debug.draw("arrow(blue)(0,0,0)(1,0,0)")
end

function destroy()
   -- disable the robot's camera system
   robot.camera_system.disable()
end
